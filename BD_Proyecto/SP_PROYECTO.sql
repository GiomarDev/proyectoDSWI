USE COMPULAST
GO

--SP LOGIN
IF OBJECT_ID('SP_BUSCAR_USUARIO') IS NOT NULL 
	DROP PROC SP_BUSCAR_USUARIO
GO

CREATE OR ALTER PROCEDURE SP_BUSCAR_USUARIO
@p_usuari_codigo varchar(8),
@p_usuari_pass varchar(10)
AS
BEGIN
	SELECT USUARI_CODIGO, USUARI_PASS, USUARI_APEPAT, USUARI_APEMAT, USUARI_NOMBRES, USUARI_CORREO, USUARI_TELEFONO
	FROM [dbo].[TBUSUARIO]
	WHERE USUARI_CODIGO = @p_usuari_codigo and USUARI_PASS = @p_usuari_pass
END
GO
--exec SP_BUSCAR_USUARIO 1001,'giomar'


--SP CRUD
--SELECT*FROM TB_PC
--REGISTRA PC
IF OBJECT_ID('SP_NUEVAPC')IS NOT NULL 
	DROP PROC SP_NUEVAPC
GO
CREATE PROC SP_NUEVAPC(@DES VARCHAR(45), @CAT INT, @PROC INT, @GPU INT, @MB INT, @RAM INT, @ALM INT, @PSU INT, @GAB INT, @MON INT, @PER INT, @PRE MONEY, @UEX INT, @UPE INT, @FOT VARCHAR(50))
AS
	INSERT INTO TB_PC
	VALUES(@DES,@CAT,@PROC,@GPU,@MB,@RAM,@ALM,@PSU,@GAB,@MON,@PER,@PRE,@UEX,@UPE,@FOT)
GO

EXEC SP_NUEVAPC 'PC DE INGENIERIA I7 10700K + QUADRO RTX 4000',10,9,8,2,6,4,8,5,3,4,8900.00,7,0,'~/fotos_pc/2.jpg'
GO

--ACTUALIZA PC
IF OBJECT_ID('SP_ACTUALIZAPC')IS NOT NULL 
	DROP PROC SP_ACTUALIZAPC
GO
CREATE PROC SP_ACTUALIZAPC(@ID_PC INT,@DES VARCHAR(45), @CAT INT, @PROC INT, @GPU INT, @MB INT, @RAM INT, @ALM INT, @PSU INT, @GAB INT, @MON INT, @PER INT, @PRE MONEY, @UEX INT, @UPE INT, @FOT VARCHAR(50))
AS
	UPDATE TB_PC
	SET DES_PC = @DES,IDE_CAT = @CAT,ID_PROC = @PROC,IDE_GPU = @GPU,IDE_MB = @MB,ID_RAM = @RAM,ID_ALM = @ALM,ID_PSU = @PSU,IDE_GAB = @GAB,IDE_MON = @MON,IDE_PER = @PER,PRE_PRO = @PRE,UEX_PRO = @UEX,UPE_PRO = @UPE,FOT_PRO = @FOT
	WHERE ID_PC=@ID_PC
GO

EXEC SP_ACTUALIZAPC 2,'PC INGENIERIA I7 10700K + QUADRO RTX 4000',10,9,8,2,6,4,8,5,3,4,8900.00,7,0,'~/fotos_pc/2.jpg'
GO

--ELIMINA PC
IF OBJECT_ID('SP_ELIMINAPC') IS NOT NULL 
	DROP PROC SP_ELIMINAPC
GO
CREATE PROC SP_ELIMINAPC(@ID_PC INT)
AS
	DELETE FROM TB_PC WHERE ID_PC=@ID_PC
GO

EXEC SP_ELIMINAPC 5
GO

--PARA LOS COMBOS
IF OBJECT_ID('SP_LISTARCAT')IS NOT NULL 
	DROP PROC SP_LISTARCAT
GO
CREATE PROC SP_LISTARCAT
AS
	SELECT P.IDE_CAT,P.NOM_CAT
	FROM TB_CATEGORIA P
GO
--select*from TB_PC

IF OBJECT_ID('SP_LISTARPROC')IS NOT NULL 
	DROP PROC SP_LISTARPROC
GO
CREATE PROC SP_LISTARPROC
AS
	SELECT P.ID_PROC,P.NOM_PROC
	FROM TB_PROCESADOR P
GO
--select*from TB_PC

IF OBJECT_ID('SP_LISTARGPU')IS NOT NULL 
	DROP PROC SP_LISTARGPU
GO
CREATE PROC SP_LISTARGPU
AS
	SELECT P.IDE_GPU,P.DES_GPU
	FROM TB_GPU P
GO
--select*from TB_GPU

IF OBJECT_ID('SP_LISTARMB')IS NOT NULL 
	DROP PROC SP_LISTARMB
GO
CREATE PROC SP_LISTARMB
AS
	SELECT P.IDE_MB,P.DES_MB
	FROM TB_MOTHERBOARD P
GO
--select*from TB_MOTHERBOARD

IF OBJECT_ID('SP_LISTARRAM')IS NOT NULL 
	DROP PROC SP_LISTARRAM
GO
CREATE PROC SP_LISTARRAM
AS
	SELECT P.ID_RAM,P.DES_RAM
	FROM TB_RAM P
GO
--select*from TB_RAM

IF OBJECT_ID('SP_LISTARALM')IS NOT NULL 
	DROP PROC SP_LISTARALM
GO
CREATE PROC SP_LISTARALM
AS
	SELECT P.ID_ALM,P.DES_ALM
	FROM TB_DISPO_ALMACENAMIENTO P
GO
--select*from TB_DISPO_ALMACENAMIENTO

IF OBJECT_ID('SP_LISTARPSU')IS NOT NULL 
	DROP PROC SP_LISTARPSU
GO
CREATE PROC SP_LISTARPSU
AS
	SELECT P.ID_PSU,P.DES_PSU
	FROM TB_FUENTE P
GO
--select*from TB_pc

IF OBJECT_ID('SP_LISTARGAB')IS NOT NULL 
	DROP PROC SP_LISTARGAB
GO
CREATE PROC SP_LISTARGAB
AS
	SELECT P.IDE_GAB,P.DES_GAB
	FROM TB_GABINETE P
GO
--select*from TB_GABINETE

IF OBJECT_ID('SP_LISTARMON')IS NOT NULL 
	DROP PROC SP_LISTARMON
GO
CREATE PROC SP_LISTARMON
AS
	SELECT P.IDE_MON,P.DES_MON
	FROM TB_MONITOR P
GO
--select*from TB_MONITOR

IF OBJECT_ID('SP_LISTARPER')IS NOT NULL 
	DROP PROC SP_LISTARPER
GO
CREATE PROC SP_LISTARPER
AS
	SELECT P.IDE_PER,P.DES_PER
	FROM TB_KIT_PERIFERICO P
GO
--select*from TB_KIT_PERIFERICO
--SP LISTA PC ORIGINAL
IF OBJECT_ID('SP_LISTAPCO')IS NOT NULL 
	DROP PROC SP_LISTAPCO
GO
CREATE PROC SP_LISTAPCO
AS
	SELECT * FROM TB_PC
GO

--SP LISTADO
IF OBJECT_ID('SP_LISTAPC')IS NOT NULL 
	DROP PROC SP_LISTAPC
GO
CREATE PROC SP_LISTAPC
AS
	SELECT PC.ID_PC,
		   PC.DES_PC,
		   CA.NOM_CAT,
		   PR.NOM_PROC,
		   GP.DES_GPU,
		   MB.DES_MB,
		   RA.DES_RAM,
		   DA.DES_ALM,
		   FU.DES_PSU,
		   GA.DES_GAB,
		   MO.DES_MON,
		   KP.DES_PER,
		   PC.PRE_PRO,
		   PC.UEX_PRO,
		   PC.UPE_PRO,
		   PC.FOT_PRO
	FROM TB_PC PC JOIN TB_CATEGORIA  CA ON
			PC.IDE_CAT=CA.IDE_CAT JOIN TB_PROCESADOR PR ON
			PC.ID_PROC = PR.ID_PROC JOIN TB_GPU GP ON
			PC.IDE_GPU = GP.IDE_GPU JOIN TB_MOTHERBOARD MB ON
			PC.IDE_MB = MB.IDE_MB JOIN TB_RAM RA ON
			PC.ID_RAM = RA.ID_RAM JOIN TB_DISPO_ALMACENAMIENTO DA ON
			PC.ID_ALM = DA.ID_ALM JOIN TB_FUENTE FU ON
			PC.ID_PSU = FU.ID_PSU JOIN TB_GABINETE GA ON
			PC.IDE_GAB = GA.IDE_GAB JOIN TB_MONITOR MO ON
			PC.IDE_MON = MO.IDE_MON JOIN TB_KIT_PERIFERICO KP ON
			PC.IDE_PER = KP.IDE_PER
GO

EXEC SP_LISTAPC
GO


--PROCEDIMIENTOS PARA LOS REPORTES
SELECT * FROM PEDIDO
/*PEDIDOS*/
--1. LISTADO GENERAL DE PEDIDOS
IF OBJECT_ID('SP_LISTAPEDIDOS') IS NOT NULL 
	DROP PROC SP_LISTAPEDIDOS
GO
CREATE PROC SP_LISTAPEDIDOS
AS
	SELECT P.IDE_PED,C.NOM_CLI,E.NOM_EMP+SPACE(1)+E.APE_EMP AS EMPLEADO,
		P.FEC_PED,P.FEN_PED,P.PAI_PED
		FROM PEDIDO P 
		JOIN CLIENTE C ON P.IDE_CLI=C.IDE_CLI
		JOIN EMPLEADO E ON E.IDE_EMP=P.IDE_EMP
GO

--2. LISTADO DE PEDIDOS POR RANGO DE FECHAS (FEC_PED)
IF OBJECT_ID('SP_LISTAPEDIDOSxFECHAS') IS NOT NULL 
	DROP PROC SP_LISTAPEDIDOSxFECHAS
GO
CREATE PROC SP_LISTAPEDIDOSxFECHAS(@F1 DATE,@F2 DATE)
AS
	SELECT P.IDE_PED,C.NOM_CLI,E.NOM_EMP+SPACE(1)+E.APE_EMP AS EMPLEADO,
		P.FEC_PED,P.FEN_PED,P.PAI_PED
		FROM PEDIDO P 
		JOIN CLIENTE C ON P.IDE_CLI=C.IDE_CLI
		JOIN EMPLEADO E ON E.IDE_EMP=P.IDE_EMP
		WHERE P.FEC_PED BETWEEN @F1 AND @F2
GO
SET DATEFORMAT DMY
--SP_LISTAPEDIDOSxFECHAS '26/04/2017','30/12/2017'

--crud para el monitor

 --LISTAR MONITOR
 if OBJECT_ID('SP_LISTAMONITOR')is not null
	DROP PROC SP_LISTAMONITOR
 GO
 CREATE PROC SP_LISTAMONITOR
 AS
	SELECT M.IDE_MON,PV.NOM_PROV,M.DES_MON,MAR.NOM_MARCA,CAT.NOM_CAT,
			M.FREC_MON,M.PRE_PRO,M.UEX_PRO,M.UPE_PRO
	FROM TB_MONITOR M JOIN TB_PROVEEDOR PV ON 
	M.IDE_PROV=PV.IDE_PROV JOIN TB_CATEGORIA CAT ON
	M.IDE_CAT=CAT.IDE_CAT JOIN TB_MARCA MAR ON
	M.ID_MARCA=MAR.ID_MARCA
GO
---lista fotos monitor
if OBJECT_ID('SP_LISTAFOTOMONITOR')is not null
	DROP PROC SP_LISTAFOTOMONITOR
 GO
 CREATE PROC SP_LISTAFOTOMONITOR(@IDE_MONITOR INT)
 AS
	SELECT M.FOT_PRO
	FROM TB_MONITOR M
	WHERE IDE_MON=@IDE_MONITOR
GO


--PARA LOS COMBOS

--LISTAR MARCA
 if OBJECT_ID('SP_LISTARMARC')is not null
	DROP PROC SP_LISTARMARC
 GO
 CREATE PROC SP_LISTARMARC
 AS
	SELECT M.ID_MARCA,M.NOM_MARCA 
	FROM TB_MARCA M
GO
	
--LISTAR PROVEEDOR
 if OBJECT_ID('SP_LISTARPROV')is not null
	DROP PROC SP_LISTARPROV
 GO
 CREATE PROC SP_LISTARPROV
 AS
	SELECT P.IDE_PROV,P.NOM_PROV
	FROM TB_PROVEEDOR P
GO

--listar categoria  SP_LISTARCAT
-----------------
--NUEVO MONITOR
if OBJECT_ID('SP_NUEVOMONITOR')is not null
	DROP PROC SP_NUEVOMONITOR
 GO
 CREATE PROC SP_NUEVOMONITOR(@PROV INT,@DES VARCHAR(45),@MARC INT,@CAT INT,
							@FREC INT,@PRE DECIMAL,@UEX INT,@UPE INT,
							@FOT VARCHAR(45))
AS 
	INSERT INTO TB_MONITOR(IDE_PROV,DES_MON,ID_MARCA,IDE_CAT,FREC_MON,PRE_PRO,
	                       UEX_PRO,UPE_PRO,FOT_PRO)
	VALUES(@PROV,@DES,@MARC,@CAT,@FREC,@PRE,@UEX,@UPE,@FOT)
GO

select * from TB_MARCA

select * from TB_MONITOR

IF OBJECT_ID('SP_LISTAMONITORO')IS NOT NULL 
	DROP PROC SP_LISTAMONITORO
GO
CREATE PROC SP_LISTAMONITORO
AS
	SELECT * FROM TB_MONITOR
GO


--ELIMINA MONITOR
IF OBJECT_ID('SP_ELIMINAMONITOR') IS NOT NULL 
	DROP PROC SP_ELIMINAMONITOR
GO
CREATE PROC SP_ELIMINAMONITOR(@ID_MON INT)
AS
	DELETE FROM TB_MONITOR WHERE IDE_MON=@ID_MON
GO



select * from TB_MONITOR


IF OBJECT_ID('SP_ACTUALIZAMONITOR')IS NOT NULL 
	DROP PROC SP_ACTUALIZAMONITOR
GO
CREATE PROC SP_ACTUALIZAMONITOR(@ID_MON INT,@PROV INT,@DES VARCHAR(45), 
								@MARC INT,@CAT INT,@FRE_MON INT,@PRE_PRO DECIMAL,
								@UEX INT, @UPE INT, @FOT VARCHAR(50))
AS
	UPDATE TB_MONITOR
	SET IDE_PROV = @PROV, DES_MON = @DES,ID_MARCA = @MARC,IDE_CAT = @CAT, FREC_MON = @FRE_MON,
		PRE_PRO = @PRE_PRO,UEX_PRO = @UEX,UPE_PRO = @UPE,FOT_PRO = @FOT
	WHERE IDE_MON=@ID_MON
GO




select * from TB_MONITOR

--carrito de compras 

IF OBJECT_ID('SP_LISTACARRITOMONITOR')IS NOT NULL 
	DROP PROC SP_LISTACARRITOMONITOR
GO
CREATE PROC SP_LISTACARRITOMONITOR
AS
	SELECT M.IDE_MON, M.DES_MON, M.PRE_PRO, M.UEX_PRO, M.FOT_PRO
	FROM TB_MONITOR M
GO



select * from TB_MONITOR
------------------------------------------

--carrito de compras monitor

IF OBJECT_ID('SP_LISTACARRITOMONITOR')IS NOT NULL 
	DROP PROC SP_LISTACARRITOMONITOR
GO
CREATE PROC SP_LISTACARRITOMONITOR
AS
	SELECT M.IDE_MON, M.DES_MON, M.PRE_PRO, M.UEX_PRO, M.FOT_PRO
	FROM TB_MONITOR M
GO


------------------------------------------
--crud para Ram
--LISTA DE RAM
if OBJECT_ID('SP_LISTADOCOMPLETORAM')is not null
	DROP PROC SP_LISTADOCOMPLETORAM
 GO
 CREATE PROC SP_LISTADOCOMPLETORAM
 AS
	SELECT R.ID_RAM,P.NOM_PROV,R.DES_RAM,M.NOM_MARCA,C.NOM_CAT,R.MEM_RAM,
	U.NOM_UNI_MED,R.FRE_RAM,R.PRE_PRO,R.UEX_PRO,R.UPE_PRO,R.FOT_PRO
	FROM TB_RAM R JOIN TB_PROVEEDOR P ON R.IDE_PROV=P.IDE_PROV JOIN
	TB_MARCA M ON R.ID_MARCA=M.ID_MARCA JOIN TB_CATEGORIA C ON 
	R.IDE_CAT= C.IDE_CAT JOIN TB_UNIDAD_MEDIDAD U 
	ON R.IDE_UNI_MED=U.IDE_UNI_MED
GO

select * from TB_RAM


--PROCEDIMIENTOS ALMACENADO DE CARRITO COMPRAS PC

IF OBJECT_ID('SP_LISTACARRITOPC')IS NOT NULL 
	DROP PROC SP_LISTACARRITOPC
GO
CREATE PROC SP_LISTACARRITOPC
AS
	SELECT P.ID_PC, P.DES_PC, P.PRE_PRO, P.UEX_PRO, P.FOT_PRO
	FROM TB_PC P
GO

IF OBJECT_ID('SP_LISTACARRITOPROCESADOR')IS NOT NULL 
	DROP PROC SP_LISTACARRITOPROCESADOR
GO
CREATE PROC SP_LISTACARRITOPROCESADOR
AS
	SELECT P.ID_PROC, P.NOM_PROC, P.PRE_PRO, P.UEX_PRO, P.FOT_PRO
	FROM TB_PROCESADOR P
GO

--SELECT * FROM TB_PROCESADOR

--Detallemonitor
 if OBJECT_ID('SP_LISTADETALLEMONITOR')is not null
	DROP PROC SP_LISTADETALLEMONITOR
 GO
 CREATE PROC SP_LISTADETALLEMONITOR
 AS
	SELECT M.IDE_MON,PV.NOM_PROV,M.DES_MON,MAR.NOM_MARCA,CAT.NOM_CAT,
			M.FREC_MON,M.PRE_PRO,M.UEX_PRO,M.UPE_PRO,M.FOT_PRO
	FROM TB_MONITOR M JOIN TB_PROVEEDOR PV ON 
	M.IDE_PROV=PV.IDE_PROV JOIN TB_CATEGORIA CAT ON
	M.IDE_CAT=CAT.IDE_CAT JOIN TB_MARCA MAR ON
	M.ID_MARCA=MAR.ID_MARCA
GO

IF OBJECT_ID('SP_LISTACARRITORAM')IS NOT NULL 
	DROP PROC SP_LISTACARRITORAM
GO
CREATE PROC SP_LISTACARRITORAM
AS
	SELECT R.ID_RAM, R.DES_RAM, R.PRE_PRO, R.UEX_PRO, R.FOT_PRO
	FROM TB_RAM R
GO
SELECT * FROM TB_RAM






---------------------------------------------------------


/****************************************************************************************************/
/*gpu*/
/****************************************************************************************************/
IF OBJECT_ID('SP_NUEVAGPU')IS NOT NULL 
	DROP PROC SP_NUEVAGPU
GO
CREATE PROC SP_NUEVAGPU(@PROV INT, @DES VARCHAR(45), @MAR INT, @MEM INT, @UNIM INT, @PRE MONEY, @UEX INT, @UPE INT, @FOT VARCHAR(50))
AS
	INSERT INTO TB_GPU
	VALUES(@PROV,@DES,@MAR,2,@MEM,@UNIM,@PRE,@UEX,@UPE,@FOT)
GO

EXEC SP_NUEVAGPU 1,'RTX 3090 MSI',1,24,4,9800,6,0,'~/fotos_gpu/2.jpg'
GO

SELECT * FROM TB_GPU
GO

SELECT * FROM TB_CATEGORIA
GO

SELECT * FROM TB_UNIDAD_MEDIDAD
GO

--ACTUALIZA GPU
IF OBJECT_ID('SP_ACTUALIZAGPU')IS NOT NULL 
	DROP PROC SP_ACTUALIZAGPU
GO
CREATE PROC SP_ACTUALIZAGPU(@ID INT,@PROV INT, @DES VARCHAR(45), @MAR INT, @MEM INT, @UNIM INT, @PRE MONEY, @UEX INT, @UPE INT, @FOT VARCHAR(50))
AS
	UPDATE TB_GPU
	SET IDE_PROV=@PROV, DES_GPU = @DES,ID_MARCA = @MAR,MEM_GPU = @MEM,IDE_UNI_MED = @UNIM,PRE_PRO = @PRE,UEX_PRO = @UEX,UPE_PRO = @UPE,FOT_PRO = @FOT
	WHERE IDE_GPU=@ID
GO

EXEC SP_ACTUALIZAGPU 11, 2,'RTX 3090 AORUS',2,8,4,9850,12,6,'~/fotos_gpu/3.jpg'
GO

--ELIMINA PC
IF OBJECT_ID('SP_ELIMINAGPU') IS NOT NULL 
	DROP PROC SP_ELIMINAGPU
GO
CREATE PROC SP_ELIMINAGPU(@ID INT)
AS
	DELETE FROM TB_GPU WHERE IDE_GPU=@ID
GO

EXEC SP_ELIMINAGPU 11
GO

--SP_LISTADO

IF OBJECT_ID('SP_LISTAGPU')IS NOT NULL 
	DROP PROC SP_LISTAGPU
GO
CREATE PROC SP_LISTAGPU
AS
	SELECT GPU.IDE_GPU,
		   PROVE.NOM_PROV,
		   GPU.DES_GPU,
		   MAR.NOM_MARCA,
		   CATE.NOM_CAT,
		   GPU.MEM_GPU,
		   UNIM.NOM_UNI_MED,
		   GPU.PRE_PRO,
		   GPU.UEX_PRO,
		   GPU.UPE_PRO,
		   GPU.FOT_PRO
	FROM TB_GPU GPU JOIN TB_PROVEEDOR PROVE ON
			GPU.IDE_PROV=PROVE.IDE_PROV JOIN TB_MARCA MAR ON
			GPU.ID_MARCA=MAR.ID_MARCA JOIN TB_CATEGORIA CATE ON
			GPU.IDE_CAT=CATE.IDE_CAT JOIN TB_UNIDAD_MEDIDAD UNIM ON
			GPU.IDE_UNI_MED=UNIM.IDE_UNI_MED

GO

EXEC SP_LISTAGPU
GO

--SP LISTA GPU ORIGINAL
IF OBJECT_ID('SP_LISTAGPUO')IS NOT NULL 
	DROP PROC SP_LISTAGPUO
GO
CREATE PROC SP_LISTAGPUO
AS
	SELECT * FROM TB_GPU
GO

--SP LISTA PROVEEDOR
IF OBJECT_ID('SP_LISTAPROVEEDOR')IS NOT NULL 
	DROP PROC SP_LISTAPROVEEDOR
GO
CREATE PROC SP_LISTAPROVEEDOR
AS
	SELECT * FROM TB_PROVEEDOR
GO

--SP LISTA MARCA
IF OBJECT_ID('SP_LISTAMARCA')IS NOT NULL 
	DROP PROC SP_LISTAMARCA
GO
CREATE PROC SP_LISTAMARCA
AS
	SELECT * FROM TB_MARCA
GO

--SP LISTA MARCA
IF OBJECT_ID('SP_LISTAMEDIDA')IS NOT NULL 
	DROP PROC SP_LISTAMEDIDA
GO
CREATE PROC SP_LISTAMEDIDA
AS
	SELECT * FROM TB_UNIDAD_MEDIDAD
GO

/****************************************************************************************************/
/*MOTHERBOARD*/
/****************************************************************************************************/
IF OBJECT_ID('SP_NUEVAMOBO')IS NOT NULL 
	DROP PROC SP_NUEVAMOBO
GO
CREATE PROC SP_NUEVAMOBO(@PROV INT, @DES VARCHAR(45), @MAR INT, @PRE MONEY, @UEX INT, @UPE INT, @FOT VARCHAR(50))
AS
	INSERT INTO TB_MOTHERBOARD
	VALUES(@PROV,@DES,@MAR,3,@PRE,@UEX,@UPE,@FOT)
GO

EXEC SP_NUEVAMOBO 1,'B460 AORUS GAMING PRO',1,450.00,6,0,'~/fotos_mobo/2.jpg'
GO

SELECT * FROM TB_MOTHERBOARD
GO

SELECT * FROM TB_CATEGORIA
GO

SELECT * FROM TB_UNIDAD_MEDIDAD
GO

--ACTUALIZA GPU
IF OBJECT_ID('SP_ACTUALIZAMOBO')IS NOT NULL 
	DROP PROC SP_ACTUALIZAMOBO
GO
CREATE PROC SP_ACTUALIZAMOBO(@ID INT, @PROV INT, @DES VARCHAR(45), @MAR INT, @PRE MONEY, @UEX INT, @UPE INT, @FOT VARCHAR(50))
AS
	UPDATE TB_MOTHERBOARD
	SET IDE_PROV=@PROV, DES_MB = @DES,ID_MARCA = @MAR, PRE_PRO = @PRE,UEX_PRO = @UEX,UPE_PRO = @UPE,FOT_PRO = @FOT
	WHERE IDE_MB=@ID
GO

EXEC SP_ACTUALIZAMOBO 11,2,'B460 AORUS GAMING PRO GYGABYTE',2,460.00,12,6,'~/fotos_mobo/3.jpg'
GO

--ELIMINA PC
IF OBJECT_ID('SP_ELIMINAMOBO') IS NOT NULL 
	DROP PROC SP_ELIMINAMOBO
GO
CREATE PROC SP_ELIMINAMOBO(@ID INT)
AS
	DELETE FROM TB_MOTHERBOARD WHERE IDE_MB=@ID
GO

EXEC SP_ELIMINAMOBO 11
GO

--SP_LISTADO

IF OBJECT_ID('SP_LISTAMOBO')IS NOT NULL 
	DROP PROC SP_LISTAMOBO
GO
CREATE PROC SP_LISTAMOBO
AS
	SELECT MOB.IDE_MB,
		   PROV.NOM_PROV,
		   MOB.DES_MB,
		   MAR.NOM_MARCA,
		   CATE.NOM_CAT,
		   MOB.PRE_PRO,
		   MOB.UEX_PRO,
		   MOB.UPE_PRO,
		   MOB.FOT_PRO

	FROM TB_MOTHERBOARD MOB JOIN TB_PROVEEDOR PROV ON
			MOB.IDE_PROV=PROV.IDE_PROV JOIN TB_MARCA MAR ON
			MOB.ID_MARCA=MAR.ID_MARCA JOIN TB_CATEGORIA CATE ON
			MOB.IDE_CAT=CATE.IDE_CAT

GO

EXEC SP_LISTAMOBO
GO

--SP LISTA GPU ORIGINAL
IF OBJECT_ID('SP_LISTAMOBOO')IS NOT NULL 
	DROP PROC SP_LISTAMOBOO
GO
CREATE PROC SP_LISTAMOBOO
AS
	SELECT * FROM TB_MOTHERBOARD
GO

------
IF OBJECT_ID('SP_LISTACARRITOMOBO')IS NOT NULL 
	DROP PROC SP_LISTACARRITOMOBO
GO
CREATE PROC SP_LISTACARRITOMOBO
AS
	SELECT M.IDE_MB,M.DES_MB,M.PRE_PRO,M.UEX_PRO,M.FOT_PRO
	FROM TB_MOTHERBOARD M
GO

-------------
IF OBJECT_ID('SP_LISTACARRITOGPU')IS NOT NULL 
	DROP PROC SP_LISTACARRITOGPU
GO
CREATE PROC SP_LISTACARRITOGPU
AS
	SELECT G.IDE_GPU,G.DES_GPU,G.PRE_PRO,G.UEX_PRO,G.FOT_PRO
	FROM TB_GPU G
GO