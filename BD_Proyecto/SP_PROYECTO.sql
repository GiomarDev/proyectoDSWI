USE COMPULAST
GO

--SP LOGIN
IF OBJECT_ID('SP_BUSCAR_USUARIO') IS NOT NULL 
	DROP PROC SP_BUSCAR_USUARIO
GO

CREATE OR ALTER PROCEDURE SP_BUSCAR_USUARIO
@p_usuari_codigo varchar(8),
@p_usuari_pass varchar(10)
AS
BEGIN
	SELECT USUARI_CODIGO, USUARI_PASS, USUARI_APEPAT, USUARI_APEMAT, USUARI_NOMBRES, USUARI_CORREO, USUARI_TELEFONO
	FROM [dbo].[TBUSUARIO]
	WHERE USUARI_CODIGO = @p_usuari_codigo and USUARI_PASS = @p_usuari_pass
END
GO
--exec SP_BUSCAR_USUARIO 1001,'giomar'


--SP CRUD
--SELECT*FROM TB_PC
--REGISTRA PC
IF OBJECT_ID('SP_NUEVAPC')IS NOT NULL 
	DROP PROC SP_NUEVAPC
GO
CREATE PROC SP_NUEVAPC(@DES VARCHAR(45), @CAT INT, @PROC INT, @GPU INT, @MB INT, @RAM INT, @ALM INT, @PSU INT, @GAB INT, @MON INT, @PER INT, @PRE MONEY, @UEX INT, @UPE INT, @FOT VARCHAR(50))
AS
	INSERT INTO TB_PC
	VALUES(@DES,@CAT,@PROC,@GPU,@MB,@RAM,@ALM,@PSU,@GAB,@MON,@PER,@PRE,@UEX,@UPE,@FOT)
GO

EXEC SP_NUEVAPC 'PC DE INGENIERIA I7 10700K + QUADRO RTX 4000',10,9,8,2,6,4,8,5,3,4,8900.00,7,0,'~/fotos_pc/2.jpg'
GO

--ACTUALIZA PC
IF OBJECT_ID('SP_ACTUALIZAPC')IS NOT NULL 
	DROP PROC SP_ACTUALIZAPC
GO
CREATE PROC SP_ACTUALIZAPC(@ID_PC INT,@DES VARCHAR(45), @CAT INT, @PROC INT, @GPU INT, @MB INT, @RAM INT, @ALM INT, @PSU INT, @GAB INT, @MON INT, @PER INT, @PRE MONEY, @UEX INT, @UPE INT, @FOT VARCHAR(50))
AS
	UPDATE TB_PC
	SET DES_PC = @DES,IDE_CAT = @CAT,ID_PROC = @PROC,IDE_GPU = @GPU,IDE_MB = @MB,ID_RAM = @RAM,ID_ALM = @ALM,ID_PSU = @PSU,IDE_GAB = @GAB,IDE_MON = @MON,IDE_PER = @PER,PRE_PRO = @PRE,UEX_PRO = @UEX,UPE_PRO = @UPE,FOT_PRO = @FOT
	WHERE ID_PC=@ID_PC
GO

EXEC SP_ACTUALIZAPC 2,'PC INGENIERIA I7 10700K + QUADRO RTX 4000',10,9,8,2,6,4,8,5,3,4,8900.00,7,0,'~/fotos_pc/2.jpg'
GO

--ELIMINA PC
IF OBJECT_ID('SP_ELIMINAPC') IS NOT NULL 
	DROP PROC SP_ELIMINAPC
GO
CREATE PROC SP_ELIMINAPC(@ID_PC INT)
AS
	DELETE FROM TB_PC WHERE ID_PC=@ID_PC
GO

EXEC SP_ELIMINAPC 5
GO

--PARA LOS COMBOS
IF OBJECT_ID('SP_LISTARCAT')IS NOT NULL 
	DROP PROC SP_LISTARCAT
GO
CREATE PROC SP_LISTARCAT
AS
	SELECT P.IDE_CAT,P.NOM_CAT
	FROM TB_CATEGORIA P
GO
--select*from TB_PC

IF OBJECT_ID('SP_LISTARPROC')IS NOT NULL 
	DROP PROC SP_LISTARPROC
GO
CREATE PROC SP_LISTARPROC
AS
	SELECT P.ID_PROC,P.NOM_PROC
	FROM TB_PROCESADOR P
GO
--select*from TB_PC

IF OBJECT_ID('SP_LISTARGPU')IS NOT NULL 
	DROP PROC SP_LISTARGPU
GO
CREATE PROC SP_LISTARGPU
AS
	SELECT P.IDE_GPU,P.DES_GPU
	FROM TB_GPU P
GO
--select*from TB_GPU

IF OBJECT_ID('SP_LISTARMB')IS NOT NULL 
	DROP PROC SP_LISTARMB
GO
CREATE PROC SP_LISTARMB
AS
	SELECT P.IDE_MB,P.DES_MB
	FROM TB_MOTHERBOARD P
GO
--select*from TB_MOTHERBOARD

IF OBJECT_ID('SP_LISTARRAM')IS NOT NULL 
	DROP PROC SP_LISTARRAM
GO
CREATE PROC SP_LISTARRAM
AS
	SELECT P.ID_RAM,P.DES_RAM
	FROM TB_RAM P
GO
--select*from TB_RAM

IF OBJECT_ID('SP_LISTARALM')IS NOT NULL 
	DROP PROC SP_LISTARALM
GO
CREATE PROC SP_LISTARALM
AS
	SELECT P.ID_ALM,P.DES_ALM
	FROM TB_DISPO_ALMACENAMIENTO P
GO
--select*from TB_DISPO_ALMACENAMIENTO

IF OBJECT_ID('SP_LISTARPSU')IS NOT NULL 
	DROP PROC SP_LISTARPSU
GO
CREATE PROC SP_LISTARPSU
AS
	SELECT P.ID_PSU,P.DES_PSU
	FROM TB_FUENTE P
GO
--select*from TB_pc

IF OBJECT_ID('SP_LISTARGAB')IS NOT NULL 
	DROP PROC SP_LISTARGAB
GO
CREATE PROC SP_LISTARGAB
AS
	SELECT P.IDE_GAB,P.DES_GAB
	FROM TB_GABINETE P
GO
--select*from TB_GABINETE

IF OBJECT_ID('SP_LISTARMON')IS NOT NULL 
	DROP PROC SP_LISTARMON
GO
CREATE PROC SP_LISTARMON
AS
	SELECT P.IDE_MON,P.DES_MON
	FROM TB_MONITOR P
GO
--select*from TB_MONITOR

IF OBJECT_ID('SP_LISTARPER')IS NOT NULL 
	DROP PROC SP_LISTARPER
GO
CREATE PROC SP_LISTARPER
AS
	SELECT P.IDE_PER,P.DES_PER
	FROM TB_KIT_PERIFERICO P
GO
--select*from TB_KIT_PERIFERICO
--SP LISTA PC ORIGINAL
IF OBJECT_ID('SP_LISTAPCO')IS NOT NULL 
	DROP PROC SP_LISTAPCO
GO
CREATE PROC SP_LISTAPCO
AS
	SELECT * FROM TB_PC
GO

--SP LISTADO
IF OBJECT_ID('SP_LISTAPC')IS NOT NULL 
	DROP PROC SP_LISTAPC
GO
CREATE PROC SP_LISTAPC
AS
	SELECT PC.ID_PC,
		   PC.DES_PC,
		   CA.NOM_CAT,
		   PR.NOM_PROC,
		   GP.DES_GPU,
		   MB.DES_MB,
		   RA.DES_RAM,
		   DA.DES_ALM,
		   FU.DES_PSU,
		   GA.DES_GAB,
		   MO.DES_MON,
		   KP.DES_PER,
		   PC.PRE_PRO,
		   PC.UEX_PRO,
		   PC.UPE_PRO,
		   PC.FOT_PRO
	FROM TB_PC PC JOIN TB_CATEGORIA  CA ON
			PC.IDE_CAT=CA.IDE_CAT JOIN TB_PROCESADOR PR ON
			PC.ID_PROC = PR.ID_PROC JOIN TB_GPU GP ON
			PC.IDE_GPU = GP.IDE_GPU JOIN TB_MOTHERBOARD MB ON
			PC.IDE_MB = MB.IDE_MB JOIN TB_RAM RA ON
			PC.ID_RAM = RA.ID_RAM JOIN TB_DISPO_ALMACENAMIENTO DA ON
			PC.ID_ALM = DA.ID_ALM JOIN TB_FUENTE FU ON
			PC.ID_PSU = FU.ID_PSU JOIN TB_GABINETE GA ON
			PC.IDE_GAB = GA.IDE_GAB JOIN TB_MONITOR MO ON
			PC.IDE_MON = MO.IDE_MON JOIN TB_KIT_PERIFERICO KP ON
			PC.IDE_PER = KP.IDE_PER
GO

EXEC SP_LISTAPC
GO


--PROCEDIMIENTOS PARA LOS REPORTES
SELECT * FROM PEDIDO
/*PEDIDOS*/
--1. LISTADO GENERAL DE PEDIDOS
IF OBJECT_ID('SP_LISTAPEDIDOS') IS NOT NULL 
	DROP PROC SP_LISTAPEDIDOS
GO
CREATE PROC SP_LISTAPEDIDOS
AS
	SELECT P.IDE_PED,C.NOM_CLI,E.NOM_EMP+SPACE(1)+E.APE_EMP AS EMPLEADO,
		P.FEC_PED,P.FEN_PED,P.PAI_PED
		FROM PEDIDO P 
		JOIN CLIENTE C ON P.IDE_CLI=C.IDE_CLI
		JOIN EMPLEADO E ON E.IDE_EMP=P.IDE_EMP
GO

--2. LISTADO DE PEDIDOS POR RANGO DE FECHAS (FEC_PED)
IF OBJECT_ID('SP_LISTAPEDIDOSxFECHAS') IS NOT NULL 
	DROP PROC SP_LISTAPEDIDOSxFECHAS
GO
CREATE PROC SP_LISTAPEDIDOSxFECHAS(@F1 DATE,@F2 DATE)
AS
	SELECT P.IDE_PED,C.NOM_CLI,E.NOM_EMP+SPACE(1)+E.APE_EMP AS EMPLEADO,
		P.FEC_PED,P.FEN_PED,P.PAI_PED
		FROM PEDIDO P 
		JOIN CLIENTE C ON P.IDE_CLI=C.IDE_CLI
		JOIN EMPLEADO E ON E.IDE_EMP=P.IDE_EMP
		WHERE P.FEC_PED BETWEEN @F1 AND @F2
GO
SET DATEFORMAT DMY
--SP_LISTAPEDIDOSxFECHAS '26/04/2017','30/12/2017'


--PROCEDIMIENTOS ALMACENADO DE CARRITO COMPRAS PC

IF OBJECT_ID('SP_LISTACARRITOPC')IS NOT NULL 
	DROP PROC SP_LISTACARRITOPC
GO
CREATE PROC SP_LISTACARRITOPC
AS
	SELECT P.ID_PC, P.DES_PC, P.PRE_PRO, P.UEX_PRO, P.FOT_PRO
	FROM TB_PC P
GO

IF OBJECT_ID('SP_LISTACARRITOPROCESADOR')IS NOT NULL 
	DROP PROC SP_LISTACARRITOPC
GO
CREATE PROC SP_LISTACARRITOPC
AS
	SELECT P.ID_PC, P.DES_PC, P.PRE_PRO, P.UEX_PRO, P.FOT_PRO
	FROM TB_PC P
GO

--SELECT * FROM TB_PROCESADOR